(* Copyright (C) 2024 Alice Osako *)
(*
Modula-2 Portable Bit Manipulation API is free software; you can
redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3, or (at your option)
any later version.

Modula-2 Portable Bit Manipulation API is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with this package; see the file COPYING.  If not, write to the Free Software
Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. *)


DEFINITION MODULE Bitwise;


PROCEDURE BIT(value: CARDINAL; bitIndex: CARDINAL): BOOLEAN;
(* BIT - Test whether a given bit in a value is set. *)

PROCEDURE SETBIT(VAR target: CARDINAL; bitIndex: CARDINAL; bit: BOOLEAN);
(* SETBIT - Sets/clears a given bit in a value. *)


PROCEDURE SHL(value: CARDINAL; shiftFactor: CARDINAL): CARDINAL;
(* SHL - Shift a given value to the left by a certain number of bits. *)

PROCEDURE SHR(value: CARDINAL; shiftFactor: CARDINAL): CARDINAL;
(* SHR - Shift a given value to the right by a certain number of bits. *)

PROCEDURE ASHR(value: INTEGER; shiftFactor: CARDINAL): INTEGER;
(* ASHR - Shift a given value to the right by a certain number of bits,
          sign extended.  *)

PROCEDURE ROTL(value: CARDINAL; shiftFactor: CARDINAL): CARDINAL;
(* ROTL - Rotate a given value to the left by a certain number of bits. *)

PROCEDURE ROTR(value: CARDINAL; shiftFactor: CARDINAL): CARDINAL;
(* ROTR - Rotate a given value to the right by a certain number of bits. *)


PROCEDURE BWNOT(value: CARDINAL): CARDINAL;
(* BWNOT - Invert the bits of value. *)

PROCEDURE BWAND(op1: CARDINAL;  op2: CARDINAL): CARDINAL;
(* BWAND - Returns the bitwise AND of op1 and op2. *)

PROCEDURE BWOR(op1: CARDINAL;  op2: CARDINAL): CARDINAL;
(* BWOR - Returns the bitwise OR of op1 and op2. *)

PROCEDURE BWXOR(op1: CARDINAL;  op2: CARDINAL): CARDINAL;
(* BWXOR - Returns the bitwise Exclusive-OR of op1 and op2. *)

END Bitwise.